// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(uuid())
  email          String           @unique
  username       String           @default("")
  password       String?
  provider       Provider?
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  roles          Role[]
  Token          Token[]
  UserCharacters UserCharacters[]

  @@map("users")
}

model Token {
  token     String   @unique
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  userAgent String   @map("user-agent")

  @@map("tokens")
}

model Character {
  id              String           @id @default(uuid())
  nameEn          String           @default("")
  nameUa          String           @default("")
  nameRu          String           @default("")
  quality         Quality
  elementalType   Element
  region          Region
  bonusAttribute  BonusAttribute
  weapon          Weapon
  constellationEn String           @default("")
  constellationUa String           @default("")
  constellationRu String           @default("")
  arche           Arche[]
  birthday        DateTime
  titleEn         String           @default("")
  titleUa         String           @default("")
  titleRu         String           @default("")
  affiliationEn   String           @default("")
  affiliationUa   String           @default("")
  affiliationRu   String           @default("")
  icon            String           @default("")
  splashArt       String           @default("")
  cardIcon        String           @default("")
  UserCharacters  UserCharacters[]

  @@map("characters")
}

model UserCharacters {
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  characterId String

  @@id([userId, characterId])
}

model LevelUpMaterial {
  id            String             @id @default(uuid())
  nameEn        String             @default("")
  nameUa        String             @default("")
  nameRu        String             @default("")
  descriptionEn String             @default("")
  descriptionUa String             @default("")
  descriptionRu String             @default("")
  type          LevelUpMaterialType
  rarity        MaterialRarity
  icon          String             @default("")
}

model AscensionMaterial {
  id            String             @id @default(uuid())
  nameEn        String             @default("")
  nameUa        String             @default("")
  nameRu        String             @default("")
  descriptionEn String             @default("")
  descriptionUa String             @default("")
  descriptionRu String             @default("")
  type          AscensionMaterialType
  rarity        MaterialRarity
  icon          String             @default("")
}

model TalentMaterial {
  id            String             @id @default(uuid())
  nameEn        String             @default("")
  nameUa        String             @default("")
  nameRu        String             @default("")
  descriptionEn String             @default("")
  descriptionUa String             @default("")
  descriptionRu String             @default("")
  type          TalentMaterialType
  rarity        MaterialRarity
  region        Region
  farmDays      Day[]
  icon          String             @default("")
}

model WeaponMaterial {
  id            String             @id @default(uuid())
  nameEn        String             @default("")
  nameUa        String             @default("")
  nameRu        String             @default("")
  descriptionEn String             @default("")
  descriptionUa String             @default("")
  descriptionRu String             @default("")
  type          WeaponMaterialType
  rarity        MaterialRarity
  region        Region
  farmDays      Day[]
  icon          String             @default("")
}

model Mob {
  id            String    @id @default(uuid())
  nameEn        String    @default("")
  nameUa        String    @default("")
  nameRu        String    @default("")
  descriptionEn String    @default("")
  descriptionUa String    @default("")
  descriptionRu String    @default("")
  type          EnemyType
  icon          String    @default("")
}

model EliteBoss {
  id            String    @id @default(uuid())
  nameEn        String    @default("")
  nameUa        String    @default("")
  nameRu        String    @default("")
  descriptionEn String    @default("")
  descriptionUa String    @default("")
  descriptionRu String    @default("")
  type          EnemyType
  icon          String    @default("")
}

model WeeklyBoss {
  id            String    @id @default(uuid())
  nameEn        String    @default("")
  nameUa        String    @default("")
  nameRu        String    @default("")
  descriptionEn String    @default("")
  descriptionUa String    @default("")
  descriptionRu String    @default("")
  type          EnemyType
  icon          String    @default("")
}

enum Role {
  ADMIN
  USER
}

enum Provider {
  GOOGLE
}

enum Quality {
  EPIC
  LEGENDARY
  OTHER
}

enum Element {
  ANEMO
  GEO
  ELECTRO
  DENDRO
  HYDRO
  PYRO
  CRYO
  OTHER
}

enum Region {
  MONDSTADT
  LIYUE
  INAZUMA
  SUMERU
  FONTAINE
  NATLAN
  SNEZHNAYA
  OTHER
}

enum BonusAttribute {
  CRIT_DMG
  ELEMENTAL_MASTERY
  ENERGY_RECHARGE
  CRIT_RATE
  HP
  HEALING_BONUS
  PHYSICAL_DMG_BONUS
  ATK
  DEF
  PYRO_DMG_BONUS
  HYDRO_DMG_BONUS
  DENDRO_DMG_BONUS
  ELECTRO_DMG_BONUS
  CRYO_DMG_BONUS
  ANEMO_DMG_BONUS
  GEO_DMG_BONUS
  OTHER
}

enum Weapon {
  SWORD
  CLAYMORE
  BOW
  CATALYST
  POLEARM
  OTHER
}

enum Arche {
  USIA
  PNEUMA
}

enum EnemyType {
  OTHER_HUMAN_FACTIONS
  AUTOMATONS
  FATUI
  ENEMIES_OF_NOTE
  HILICHURLS
  ELEMENTAL_LIFEFORMS
  THE_ABYSS
  MYSTICAL_BEASTS
}

enum MaterialRarity {
  UNCOMMON
  RARE
  EPIC
  LEGENDARY
}

enum TalentMaterialType {
  BOOK
  CROWN
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum AscensionMaterialType {
  GEMS_OF_EXALTATION
}

enum LevelUpMaterialType {
  REGULAR_BOSS_REWARDS
  WEEKLY_BOSS_REWARDS
}

enum WeaponMaterialType {
  ASCENSION
  REFINEMENT
}